<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vibe.pay.backend.paymentlog.PaymentInterfaceRequestLogMapper">

    <resultMap id="paymentInterfaceRequestLogResultMap" type="com.vibe.pay.backend.paymentlog.PaymentInterfaceRequestLog">
        <id property="logId" column="log_id"/>
        <result property="paymentId" column="payment_id"/>
        <result property="requestType" column="request_type"/>
        <result property="requestPayload" column="request_payload"/>
        <result property="responsePayload" column="response_payload"/>
        <result property="timestamp" column="timestamp"/>
    </resultMap>

    <select id="findAll" resultMap="paymentInterfaceRequestLogResultMap">
        SELECT /* PaymentInterfaceRequestLogMapper.findAll */
               LOG_ID
             , PAYMENT_ID
             , REQUEST_TYPE
             , REQUEST_PAYLOAD
             , RESPONSE_PAYLOAD
             , TIMESTAMP
          FROM PAYMENT_INTERFACE_REQUEST_LOG
    </select>

    <select id="findByLogId" resultMap="paymentInterfaceRequestLogResultMap">
        SELECT /* PaymentInterfaceRequestLogMapper.findByLogId */
               LOG_ID
             , PAYMENT_ID
             , REQUEST_TYPE
             , REQUEST_PAYLOAD
             , RESPONSE_PAYLOAD
             , TIMESTAMP
          FROM PAYMENT_INTERFACE_REQUEST_LOG
         WHERE LOG_ID = #{logId}
    </select>

    <select id="findByPaymentId" resultMap="paymentInterfaceRequestLogResultMap">
        SELECT /* PaymentInterfaceRequestLogMapper.findByPaymentId */
               LOG_ID
             , PAYMENT_ID
             , REQUEST_TYPE
             , REQUEST_PAYLOAD
             , RESPONSE_PAYLOAD
             , TIMESTAMP
          FROM PAYMENT_INTERFACE_REQUEST_LOG
         WHERE PAYMENT_ID = #{paymentId}
      ORDER BY TIMESTAMP ASC
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="logId">
        INSERT INTO PAYMENT_INTERFACE_REQUEST_LOG ( /* PaymentInterfaceRequestLogMapper.insert */
               PAYMENT_ID
             , REQUEST_TYPE
             , REQUEST_PAYLOAD
             , RESPONSE_PAYLOAD
             , TIMESTAMP
        )
        VALUES (
               #{paymentId}
             , #{requestType}
             , #{requestPayload}
             , #{responsePayload}
             , #{timestamp}
        )
    </insert>

    <update id="update">
        UPDATE PAYMENT_INTERFACE_REQUEST_LOG /* PaymentInterfaceRequestLogMapper.update */
           SET PAYMENT_ID = #{paymentId}
             , REQUEST_TYPE = #{requestType}
             , REQUEST_PAYLOAD = #{requestPayload}
             , RESPONSE_PAYLOAD = #{responsePayload}
             , TIMESTAMP = #{timestamp}
         WHERE LOG_ID = #{logId}
    </update>

    <delete id="delete">
        DELETE /* PaymentInterfaceRequestLogMapper.delete */
          FROM PAYMENT_INTERFACE_REQUEST_LOG
         WHERE LOG_ID = #{logId}
    </delete>

</mapper>