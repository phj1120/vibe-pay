<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vibe.pay.backend.pointhistory.PointHistoryMapper">

    <resultMap id="pointHistoryResultMap" type="com.vibe.pay.backend.pointhistory.PointHistory">
        <id property="pointHistoryId" column="point_history_id"/>
        <result property="memberId" column="member_id"/>
        <result property="pointAmount" column="point_amount"/>
        <result property="balanceAfter" column="balance_after"/>
        <result property="transactionType" column="transaction_type"/>
        <result property="referenceType" column="reference_type"/>
        <result property="referenceId" column="reference_id"/>
        <result property="description" column="description"/>
        <result property="createdAt" column="created_at"/>
    </resultMap>

    <insert id="insert">
        INSERT INTO POINT_HISTORY ( /* PointHistoryMapper.insert */
               POINT_HISTORY_ID
             , MEMBER_ID
             , POINT_AMOUNT
             , BALANCE_AFTER
             , TRANSACTION_TYPE
             , REFERENCE_TYPE
             , REFERENCE_ID
             , DESCRIPTION
             , CREATED_AT
        )
        VALUES (
               NEXTVAL('point_history_id_seq')
             , #{memberId}
             , #{pointAmount}
             , #{balanceAfter}
             , #{transactionType}
             , #{referenceType}
             , #{referenceId}
             , #{description}
             , #{createdAt}
        )
    </insert>

    <select id="findByPointHistoryId" resultMap="pointHistoryResultMap">
        SELECT /* PointHistoryMapper.findByPointHistoryId */
               POINT_HISTORY_ID
             , MEMBER_ID
             , POINT_AMOUNT
             , BALANCE_AFTER
             , TRANSACTION_TYPE
             , REFERENCE_TYPE
             , REFERENCE_ID
             , DESCRIPTION
             , CREATED_AT
          FROM POINT_HISTORY
         WHERE POINT_HISTORY_ID = #{pointHistoryId}
    </select>

    <select id="findByMemberId" resultMap="pointHistoryResultMap">
        SELECT /* PointHistoryMapper.findByMemberId */
               POINT_HISTORY_ID
             , MEMBER_ID
             , POINT_AMOUNT
             , BALANCE_AFTER
             , TRANSACTION_TYPE
             , REFERENCE_TYPE
             , REFERENCE_ID
             , DESCRIPTION
             , CREATED_AT
          FROM POINT_HISTORY
         WHERE MEMBER_ID = #{memberId}
      ORDER BY CREATED_AT DESC
    </select>

    <select id="findByMemberIdWithPaging" resultMap="pointHistoryResultMap">
        SELECT /* PointHistoryMapper.findByMemberIdWithPaging */
               POINT_HISTORY_ID
             , MEMBER_ID
             , POINT_AMOUNT
             , BALANCE_AFTER
             , TRANSACTION_TYPE
             , REFERENCE_TYPE
             , REFERENCE_ID
             , DESCRIPTION
             , CREATED_AT
          FROM POINT_HISTORY
         WHERE MEMBER_ID = #{memberId}
      ORDER BY CREATED_AT DESC
         LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="findByMemberIdAndReferenceId" resultMap="pointHistoryResultMap">
        SELECT /* PointHistoryMapper.findByMemberIdAndReferenceId */
               POINT_HISTORY_ID
             , MEMBER_ID
             , POINT_AMOUNT
             , BALANCE_AFTER
             , TRANSACTION_TYPE
             , REFERENCE_TYPE
             , REFERENCE_ID
             , DESCRIPTION
             , CREATED_AT
          FROM POINT_HISTORY
         WHERE MEMBER_ID = #{memberId}
           AND REFERENCE_ID = #{referenceId}
      ORDER BY CREATED_AT DESC
    </select>

    <select id="findByReferenceTypeAndId" resultMap="pointHistoryResultMap">
        SELECT /* PointHistoryMapper.findByReferenceTypeAndId */
               POINT_HISTORY_ID
             , MEMBER_ID
             , POINT_AMOUNT
             , BALANCE_AFTER
             , TRANSACTION_TYPE
             , REFERENCE_TYPE
             , REFERENCE_ID
             , DESCRIPTION
             , CREATED_AT
          FROM POINT_HISTORY
         WHERE REFERENCE_TYPE = #{referenceType}
           AND REFERENCE_ID = #{referenceId}
      ORDER BY CREATED_AT DESC
    </select>

    <select id="findByMemberIdAndTransactionType" resultMap="pointHistoryResultMap">
        SELECT /* PointHistoryMapper.findByMemberIdAndTransactionType */
               POINT_HISTORY_ID
             , MEMBER_ID
             , POINT_AMOUNT
             , BALANCE_AFTER
             , TRANSACTION_TYPE
             , REFERENCE_TYPE
             , REFERENCE_ID
             , DESCRIPTION
             , CREATED_AT
          FROM POINT_HISTORY
         WHERE MEMBER_ID = #{memberId}
           AND TRANSACTION_TYPE = #{transactionType}
      ORDER BY CREATED_AT DESC
    </select>

    <select id="findAll" resultMap="pointHistoryResultMap">
        SELECT /* PointHistoryMapper.findAll */
               POINT_HISTORY_ID
             , MEMBER_ID
             , POINT_AMOUNT
             , BALANCE_AFTER
             , TRANSACTION_TYPE
             , REFERENCE_TYPE
             , REFERENCE_ID
             , DESCRIPTION
             , CREATED_AT
          FROM POINT_HISTORY
      ORDER BY CREATED_AT DESC
    </select>

    <update id="update">
        UPDATE POINT_HISTORY /* PointHistoryMapper.update */
           SET POINT_AMOUNT = #{pointAmount}
             , BALANCE_AFTER = #{balanceAfter}
             , TRANSACTION_TYPE = #{transactionType}
             , REFERENCE_TYPE = #{referenceType}
             , REFERENCE_ID = #{referenceId}
             , DESCRIPTION = #{description}
         WHERE POINT_HISTORY_ID = #{pointHistoryId}
    </update>

    <delete id="delete">
        DELETE /* PointHistoryMapper.delete */
          FROM POINT_HISTORY
         WHERE POINT_HISTORY_ID = #{pointHistoryId}
    </delete>

    <select id="getNextPointHistorySequence" resultType="java.lang.Long">
        SELECT NEXTVAL('point_history_id_seq')
    </select>

</mapper>
